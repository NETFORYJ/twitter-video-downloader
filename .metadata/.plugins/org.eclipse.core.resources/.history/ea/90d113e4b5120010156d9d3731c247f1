<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Downloader</title>
  <style>
      body {
          display: flex;
          height: 100vh;
          justify-content: center;
          align-items: center;
          background: linear-gradient(135deg, #1DA1F2, #002244);
          color: #fff;
          font-family: 'Arial', sans-serif;
          text-align: center;
          margin: 0;
          padding: 20px;
      }

      .container {
          background-color: rgba(0, 0, 0, 0.85);
          padding: 35px;
          border-radius: 15px;
          box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
          width: 90%;
          max-width: 450px;
      }

      h1 {
          margin-bottom: 15px;
          font-size: 22px;
      }

      input[type="text"] {
          width: 100%;
          padding: 12px;
          border: none;
          border-radius: 8px;
          margin-bottom: 15px;
          font-size: 14px;
          outline: none;
      }

      button {
          width: 100%;
          padding: 12px;
          background: linear-gradient(135deg, #FFD700, #FFC107);
          border: none;
          border-radius: 8px;
          font-size: 16px;
          color: #333;
          font-weight: bold;
          cursor: pointer;
          transition: background 0.3s ease;
      }

      button:hover {
          background: linear-gradient(135deg, #FFC107, #FF9800);
      }

      #progress-container {
          width: 100%;
          background-color: #ddd;
          border-radius: 8px;
          margin-top: 15px;
          display: none;
      }

      #progress-bar {
          width: 0%;
          height: 10px;
          background-color: #FFD700;
          border-radius: 8px;
          transition: width 0.3s ease;
      }

      #result {
          margin-top: 15px;
          font-weight: bold;
      }

      #downloadLink {
          display: none;
          margin-top: 15px;
          padding: 12px;
          background-color: #28a745;
          color: white;
          border-radius: 8px;
          text-decoration: none;
          font-weight: bold;
          transition: background 0.3s ease;
      }

      #downloadLink:hover {
          background-color: #218838;
      }

      /* Updated Thumbnail Styling */
      #thumbnail {
          display: none;
          margin-top: 12px;
          width: 100%;
          max-height: 250px;
          object-fit: cover;
          border-radius: 10px;
          box-shadow: 0 4px 8px rgba(255, 255, 255, 0.2);
          transition: opacity 0.3s ease-in-out;
      }

      /* Responsive Design */
      @media (max-width: 500px) {
          .container {
              padding: 25px;
          }

          h1 {
              font-size: 20px;
          }

          input, button {
              font-size: 14px;
          }

          #thumbnail {
              max-height: 200px;
          }
      }
  </style>
</head>
<body>
  <div class="container">
      <h1>üîó Video Downloader</h1>
      <form id="downloadForm">
          <input type="text" id="videoUrl" placeholder="Paste Video URL here..." required>
          <button type="submit">Enter üöÄ</button>
      </form>
      
      <img id="thumbnail" src="" alt="Thumbnail Preview">
      
      <p id="result"></p>
      <div id="progress-container">
          <div id="progress-bar"></div>
      </div>
      <a id="downloadLink" href="#" download>üì• Download Video</a>
  </div>

  <script>
      document.getElementById("videoUrl").addEventListener("input", async function() {
          const videoUrl = this.value.trim();
          const thumbnail = document.getElementById("thumbnail");

          if (!videoUrl) {
              thumbnail.style.display = "none";
              return;
          }

          try {
              const response = await fetch(`/api/thumbnail?videoUrl=${encodeURIComponent(videoUrl)}`);
              const data = await response.json();
              console.log("Thumbnail response data:", data);

              if (data.thumbnail) {
                  thumbnail.src = data.thumbnail;
                  thumbnail.style.display = "block";
                  thumbnail.style.opacity = "1";
              } else {
                  console.log("No thumbnail found");
                  thumbnail.style.display = "none";
              }
          } catch (error) {
              console.error("Thumbnail fetch error:", error);
              thumbnail.style.display = "none";
          }
      });

      document.getElementById("downloadForm").addEventListener("submit", async function(event) {
          event.preventDefault();

          const videoUrl = document.getElementById("videoUrl").value.trim();
          const progressBar = document.getElementById("progress-bar");
          const progressContainer = document.getElementById("progress-container");
          const resultText = document.getElementById("result");
          const downloadLink = document.getElementById("downloadLink");

          resultText.innerText = "";
          progressContainer.style.display = "block";
          progressBar.style.width = "0%";
          downloadLink.style.display = "none";

          try {
              const response = await fetch('/api/download', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                  body: new URLSearchParams({ videoUrl })
              });

              if (!response.ok) {
                  throw new Error(await response.text());
              }

              const blob = await response.blob();
              const fileUrl = window.URL.createObjectURL(blob);

              resultText.innerText = "‚úÖ Video ready for download!";
              resultText.style.color = "green";
              downloadLink.href = fileUrl;
              downloadLink.download = "video.mp4";
              downloadLink.style.display = "block";
          } catch (error) {
              console.error("Download error:", error);
              resultText.innerText = "‚ùå Error downloading video. Try again!";
              resultText.style.color = "red";
          }
      });
  </script>
</body>
</html>